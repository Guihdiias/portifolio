// /* eslint-disable react/jsx-props-no-multi-spaces */
// import { useState, useEffect, useCallback } from 'react';
// // import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
// // import { faBell } from '@fortawesome/free-solid-svg-icons';

// import { useRouter } from 'next/router';
// import Skeleton from '@mui/material/Skeleton';
// import { useDispatch, useSelector } from 'react-redux';
// import Link from 'next/link';
// import Notification from '../Notification';
// import UsuarioMenu from '../UsuarioMenu';
// import Resources from '../../resources/resources';
// import Local from '../../resources/resources.json';
// import api from '../../services/api';
// import { RootState } from '../../store';
// import { setOpenMenu } from '../../store/menuStore';

// interface InfosClaims{
//     grupoAcessoAD:{
//         nome: string
//     }
//     usuarioSistema:{
//         pessoaFisica:{
//             nmPessoaCompleto: string
//         }
//     }
// }
// export default function Header({ ...props }: any) {
//     const theme = useSelector((state: RootState) => state.tema);
//     const menu = useSelector((state: RootState) => state.menu);
//     const dispatch = useDispatch();
//     const [open, setOpen] = useState(false);
//     const [idioma, setIdioma] = useState(Local.idioma);
//     const [nomeCompleto, setNomeCompleto] = useState('');
//     const [infosClaims, setInfosClaims] = useState<InfosClaims>();
//     const [loadingPage, setLoadingPage] = useState(true);
//     const [identityUrl, setIdentityUrl] = useState(process.env.IDENTITY_URL);
//     const router = useRouter();
//     const handleClick = useCallback(
//         () => {
//             dispatch(setOpenMenu());
//         },
//         [],
//     );
//     const carregarCabecalho = async function getFromAPI() {
//         const response = await api.get('api/Account/getInfosLogin');
//         const infos = {
//             grupoAcessoAD: {
//                 nome: response?.data?.grupoAcessoAD[0]?.nome,
//             },
//             usuarioSistema: {
//                 pessoaFisica: {
//                     nmPessoaCompleto: response?.data?.usuarioSistema?.pessoaFisica?.nmPessoaCompleto,
//                 },
//             },
//         };
//         const getAuth = await api.get(`${identityUrl}getAuth`);
//         if (!getAuth?.data ?? false) { router.push('/Login'); }
//         setInfosClaims(infos);
//         setNomeCompleto(response?.data?.usuarioSistema?.pessoaFisica?.nmPessoaCompleto);
//     };
//     const changeIdioma = () => { props.changeIdioma(); };
//     useEffect(() => {
//         setLoadingPage((nomeCompleto === ''
//         || nomeCompleto === null
//         || nomeCompleto === undefined));
//         if (loadingPage) {
//             carregarCabecalho();
//         }
//         if (props.open !== open) { setOpen(props.open); }
//         if (Local.idioma !== idioma) { setIdioma(Local.idioma); }
//         if (identityUrl !== process.env.IDENTITY_URL) { setIdentityUrl(process.env.IDENTITY_URL); }
//     });
//     return (
//         <header
//             style={{ backgroundImage: `linear-gradient(to bottom right, ${theme.colors.menu}, ${theme.colors.menu} 90%` }}
//             className="fixed w-full flex items-center justify-between px-6 py-4 pl-10 shadow-md shadow-gray-800"
//         >
//             <div className="flex items-center">
//                 <button
//                     type="button"
//                     style={{ marginTop: '20px', marginLeft: '5px' }}
//                     onClick={handleClick}
//                     className={`absolute top-0 left-0 text-gray-500 focus:outline-none ${menu.open ? '' : 'lg:hidden'}`}
//                 >
//                     <svg
//                         className="w-6 h-6"
//                         viewBox="0 0 24 24"
//                         fill="none"
//                         xmlns="http://www.w3.org/2000/svg"
//                     >
//                         <path
//                             d="M4 6H20M4 12H20M4 18H11"
//                             stroke={`${theme.colors.text}`}
//                             strokeWidth="2"
//                             strokeLinecap="round"
//                             strokeLinejoin="round"
//                         />
//                     </svg>
//                 </button>
//                 <Link
//                     href="/"
//                 >
//                     <a>
//                         <img src={theme.selected === 'dark' ? '/logo-roma-branca.png' : '/logo-preta.png'} className="mr-3 h-9" alt="brand" />
//                     </a>
//                 </Link>
//                 <div className="flex flex-col">
//                     {loadingPage ? (
//                         <Skeleton variant="text" sx={{ fontSize: '1rem', bgcolor: '#7a7676', width: '300px' }} />
//                     ) : (
//                         <p
//                             style={{ color: `${theme.colors.text}` }}
//                             className={`text-[${theme.colors.text}] self-start text-base font-bold whitespace-nowrap`}
//                         >
//                             {`${Resources('BemVindoAo', idioma)} ROMA WMS - ${infosClaims?.grupoAcessoAD.nome}`}
//                         </p>
//                     )}
//                     {loadingPage ? (
//                         <Skeleton variant="text" sx={{ fontSize: '1rem', bgcolor: '#7a7676' }} />
//                     ) : (
//                         <p
//                             style={{ color: `${theme.colors.text}` }}
//                             className={`text-[${theme.colors.text}] self-start text-sm font-semibold whitespace-nowrap `}
//                         >
//                             {`${Resources('Ola', idioma)} ${nomeCompleto} ${Resources('bemVindoDeVolta', idioma)}!`}
//                         </p>
//                     )}
//                 </div>

//             </div>

//             <div className="flex items-center">
//                 <Notification />
//                 <UsuarioMenu changeIdioma={changeIdioma} changeTheme={props.changeTheme} />
//             </div>
//         </header>
//     );
// }
